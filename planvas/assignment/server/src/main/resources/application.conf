# Style guidelines:
#
# Typesafe config format is very, very flexible. It's so flexible that it's easy to make mistakes
# because it's hard to remember what few rules it has. Here are some general guidelines:
#
# 1. Use JSON-style to define sub-objects. That is, "thing : { subThing : { .. } }" instead of
#    "thing.subThing". We may allow exceptions to this for readability.
# 2. Use equals to define values. That is, "value = 1" instead of "value: 1".
# 3. Quotes around property values are optional, unless your property value contains a ":"
#    or some other reserved value, in which case you must use quotes. You can always use quotes
#    if you want to be safe
# 4. Don't use commas at the end of lines. Typesafe config format supports this to be more JSON-
#    like, but they're just noise.
# 5. Comments:
#    - Comments are highly suggested. Nothing is as obvious as you think.
#    - Comment time units *always*.
#    - Put comments above the property definition, not at the end of the same line.
#    - Preferred format is line 1 is a short summary of the comment, line 2 elaborates on the
#      property, including how its used and what values are accepted.
#
# Instead of
#
#   blah.thing.x = 1
#   blah.thing.y = 2
#   blah.thing.url = http://google.com
#
# You should do
#
#   blah : {
#     thing : {
#       x = 1
#       y = 2
#       url = "http://google.com"
#     }
#   }
#
# An alternate format where you use "x: 1" would work, but for consistency lets stick with
# using the equals sign when defining property value.
#
###################################################################################################
#
# Assignment Application Configuration
#assignment
# This file includes all configurable properties for Assignment.  From a high level note that there
# are two top-level objects, public and private.  Anything that explicitly should NOT be exposed
# to the user should go in private.  Anything in public WILL be exposed to the user since it is
# passed to the front end on the main JSP.
#
# application.conf (this file) is the superset of all configurable properties.  A second file,
# overriding.conf is used to override application.conf.  overriding.conf should only contain the
# properties that it is reasonable to expect would be changed based on an environment or for
# application performance / configuration.  In general static text and such should remain only
# in application.conf.  If you're not sure if a property should go in overriding.conf or not
# just ask in chat and see what the rest of the team thinks.
#
###################################################################################################
assignment : {
    private : {
        # configuration parameters for the HSQL in memory database
        database : {
            dbSchema = "PUBLIC"
            dsConnectionString = "jdbc:hsqldb:mem:assignment"
            dsName = "SA"
            dsPassword = ""
        }
    }

    ###############################################################################################
    #
    # All content in this following block will be available to the client so don't put anything
    # proprietary or security-related in here.  This should be used to expose static text, validation
    # settings, etc. that are needed by the JavaScript side of things.
    #
    ###############################################################################################
    public : {
        # This is the format define and used by Angular.
        # For the format settings at the time this was written,
        # see https://v13.angular.io/api/common/DatePipe.
        dateFormat = "MMMM dd, yyyy h:mm a"
        # This is the format style defined and used by Moment.js.
        # The ngx-bootstrap library also uses this style for
        # components such as the Date Picker.  For the format settings,
        # see https://momentjs.com/docs/#/displaying/format/.
        #
        # Also note that Typesafe config does not always need quotes
        # around strings.  However, if certain characters, such as :,
        # are in the string, it will need to be wrapped in quotes and
        # possibly escaped.
        momentDateFormat = "MM.dd.YYYY HH:mm"
        subjectMaxLength = 30
        detailsMaxLength = 100
        meetingIntervalMinutes = 15
    }
}